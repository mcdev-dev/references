security:
    encoders:
        App\Entity\User:
            algorithm : auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        user_provides:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: user_provides

            form_login:
                login_path: connexion
                check_path: connexion
                default_target_path: home
                csrf_token_generator: security.csrf.token_manager
            
            logout:
                path: deconnexion
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }

        - {path : ^/connexion, allow_if: "not has_role('ROLE_USER')"  }
        - {path : ^/inscription, allow_if: "not has_role('ROLE_USER')" }
        
        - {path : ^/admin/stats, roles: ROLE_SUPER_ADMIN }

    role_hierarchy:
        # un membre avec le ROLE_ADMIN aura également le ROLE_USER
        ROLE_ADMIN: ROLE_USER
        # Le ROLE_SUPER_ADMIN avec le ROLE_ALLOWED_TO_SWITCH qui permet de s'authentifier en se faisant passer pour n'importe quel membre. Particulièrement utile pour débugger son code.
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
